version: "3.8"
services:
  api:
    container_name: api
    build:
      dockerfile: api.Dockerfile
      context: .
    ports:
      - "8080:8000"
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      - DB_PASSWORD=qwerty
    networks:
      - app

  postgres_db:
    image: postgres:latest
    command:
      - "postgres"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./db/migrations/000001_create_users_table.up.sql:/docker-entrypoint-initdb.d/000001_create_users_table.up.sql:ro
      - postgres-data:/var/lib/postgresql/data
    #healthcheck - Проверка состояния/работоспособности
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - app

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "postgres@postgres.com"
      PGADMIN_DEFAULT_PASSWORD: "qwerty"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - app
volumes:
  postgres-data:
  pgadmin-data:

networks:
  app:
    name: app